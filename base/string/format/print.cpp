// This file was GENERATED by command:
//     pump.py print.cpp.pump
// DO NOT EDIT BY HAND!!!

// Copyright (c) 2013, The TOFT Authors.
// All rights reserved.
//
// Author: CHEN Feng <chen3feng@gmail.com>
// Created: 2013-02-07

#include "toft/base/string/format/print.h"

#include "toft/base/string/format/vprint.h"

namespace toft {

//////////////////////////////////////////////////////////////////////////////
// 1 arg

int StringPrintTo(std::string* out, const char* format)
{
    return StringVPrintTo(out, format, NULL, 0);
}

int StringPrintAppend(std::string* out, const char* format)
{
    return StringVPrintAppend(out, format, NULL, 0);
}

std::string StringPrint(const char* format)
{
    return StringVPrint(format, NULL, 0);
}

//////////////////////////////////////////////////////////////////////////////
// 1 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1)
{
    const FormatPrintArg* args[] = {
        &arg1,
    };
    return StringVPrintTo(out, format, args, 1);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1)
{
    const FormatPrintArg* args[] = {
        &arg1,
    };
    return StringVPrintAppend(out, format, args, 1);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1)
{
    const FormatPrintArg* args[] = {
        &arg1,
    };
    return StringVPrint(format, args, 1);
}

//////////////////////////////////////////////////////////////////////////////
// 2 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
    };
    return StringVPrintTo(out, format, args, 2);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
    };
    return StringVPrintAppend(out, format, args, 2);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
    };
    return StringVPrint(format, args, 2);
}

//////////////////////////////////////////////////////////////////////////////
// 3 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
    };
    return StringVPrintTo(out, format, args, 3);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
    };
    return StringVPrintAppend(out, format, args, 3);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
    };
    return StringVPrint(format, args, 3);
}

//////////////////////////////////////////////////////////////////////////////
// 4 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
    };
    return StringVPrintTo(out, format, args, 4);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
    };
    return StringVPrintAppend(out, format, args, 4);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
    };
    return StringVPrint(format, args, 4);
}

//////////////////////////////////////////////////////////////////////////////
// 5 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
    };
    return StringVPrintTo(out, format, args, 5);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
    };
    return StringVPrintAppend(out, format, args, 5);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
    };
    return StringVPrint(format, args, 5);
}

//////////////////////////////////////////////////////////////////////////////
// 6 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
    };
    return StringVPrintTo(out, format, args, 6);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
    };
    return StringVPrintAppend(out, format, args, 6);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
    };
    return StringVPrint(format, args, 6);
}

//////////////////////////////////////////////////////////////////////////////
// 7 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
    };
    return StringVPrintTo(out, format, args, 7);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
    };
    return StringVPrintAppend(out, format, args, 7);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
    };
    return StringVPrint(format, args, 7);
}

//////////////////////////////////////////////////////////////////////////////
// 8 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
    };
    return StringVPrintTo(out, format, args, 8);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
    };
    return StringVPrintAppend(out, format, args, 8);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
    };
    return StringVPrint(format, args, 8);
}

//////////////////////////////////////////////////////////////////////////////
// 9 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8,
                  const FormatPrintArg& arg9)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
    };
    return StringVPrintTo(out, format, args, 9);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8,
                      const FormatPrintArg& arg9)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
    };
    return StringVPrintAppend(out, format, args, 9);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8,
                        const FormatPrintArg& arg9)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
    };
    return StringVPrint(format, args, 9);
}

//////////////////////////////////////////////////////////////////////////////
// 10 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8,
                  const FormatPrintArg& arg9,
                  const FormatPrintArg& arg10)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
    };
    return StringVPrintTo(out, format, args, 10);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8,
                      const FormatPrintArg& arg9,
                      const FormatPrintArg& arg10)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
    };
    return StringVPrintAppend(out, format, args, 10);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8,
                        const FormatPrintArg& arg9,
                        const FormatPrintArg& arg10)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
    };
    return StringVPrint(format, args, 10);
}

//////////////////////////////////////////////////////////////////////////////
// 11 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8,
                  const FormatPrintArg& arg9,
                  const FormatPrintArg& arg10,
                  const FormatPrintArg& arg11)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
    };
    return StringVPrintTo(out, format, args, 11);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8,
                      const FormatPrintArg& arg9,
                      const FormatPrintArg& arg10,
                      const FormatPrintArg& arg11)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
    };
    return StringVPrintAppend(out, format, args, 11);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8,
                        const FormatPrintArg& arg9,
                        const FormatPrintArg& arg10,
                        const FormatPrintArg& arg11)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
    };
    return StringVPrint(format, args, 11);
}

//////////////////////////////////////////////////////////////////////////////
// 12 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8,
                  const FormatPrintArg& arg9,
                  const FormatPrintArg& arg10,
                  const FormatPrintArg& arg11,
                  const FormatPrintArg& arg12)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
    };
    return StringVPrintTo(out, format, args, 12);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8,
                      const FormatPrintArg& arg9,
                      const FormatPrintArg& arg10,
                      const FormatPrintArg& arg11,
                      const FormatPrintArg& arg12)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
    };
    return StringVPrintAppend(out, format, args, 12);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8,
                        const FormatPrintArg& arg9,
                        const FormatPrintArg& arg10,
                        const FormatPrintArg& arg11,
                        const FormatPrintArg& arg12)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
    };
    return StringVPrint(format, args, 12);
}

//////////////////////////////////////////////////////////////////////////////
// 13 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8,
                  const FormatPrintArg& arg9,
                  const FormatPrintArg& arg10,
                  const FormatPrintArg& arg11,
                  const FormatPrintArg& arg12,
                  const FormatPrintArg& arg13)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
    };
    return StringVPrintTo(out, format, args, 13);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8,
                      const FormatPrintArg& arg9,
                      const FormatPrintArg& arg10,
                      const FormatPrintArg& arg11,
                      const FormatPrintArg& arg12,
                      const FormatPrintArg& arg13)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
    };
    return StringVPrintAppend(out, format, args, 13);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8,
                        const FormatPrintArg& arg9,
                        const FormatPrintArg& arg10,
                        const FormatPrintArg& arg11,
                        const FormatPrintArg& arg12,
                        const FormatPrintArg& arg13)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
    };
    return StringVPrint(format, args, 13);
}

//////////////////////////////////////////////////////////////////////////////
// 14 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8,
                  const FormatPrintArg& arg9,
                  const FormatPrintArg& arg10,
                  const FormatPrintArg& arg11,
                  const FormatPrintArg& arg12,
                  const FormatPrintArg& arg13,
                  const FormatPrintArg& arg14)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
    };
    return StringVPrintTo(out, format, args, 14);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8,
                      const FormatPrintArg& arg9,
                      const FormatPrintArg& arg10,
                      const FormatPrintArg& arg11,
                      const FormatPrintArg& arg12,
                      const FormatPrintArg& arg13,
                      const FormatPrintArg& arg14)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
    };
    return StringVPrintAppend(out, format, args, 14);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8,
                        const FormatPrintArg& arg9,
                        const FormatPrintArg& arg10,
                        const FormatPrintArg& arg11,
                        const FormatPrintArg& arg12,
                        const FormatPrintArg& arg13,
                        const FormatPrintArg& arg14)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
    };
    return StringVPrint(format, args, 14);
}

//////////////////////////////////////////////////////////////////////////////
// 15 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8,
                  const FormatPrintArg& arg9,
                  const FormatPrintArg& arg10,
                  const FormatPrintArg& arg11,
                  const FormatPrintArg& arg12,
                  const FormatPrintArg& arg13,
                  const FormatPrintArg& arg14,
                  const FormatPrintArg& arg15)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
        &arg15,
    };
    return StringVPrintTo(out, format, args, 15);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8,
                      const FormatPrintArg& arg9,
                      const FormatPrintArg& arg10,
                      const FormatPrintArg& arg11,
                      const FormatPrintArg& arg12,
                      const FormatPrintArg& arg13,
                      const FormatPrintArg& arg14,
                      const FormatPrintArg& arg15)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
        &arg15,
    };
    return StringVPrintAppend(out, format, args, 15);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8,
                        const FormatPrintArg& arg9,
                        const FormatPrintArg& arg10,
                        const FormatPrintArg& arg11,
                        const FormatPrintArg& arg12,
                        const FormatPrintArg& arg13,
                        const FormatPrintArg& arg14,
                        const FormatPrintArg& arg15)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
        &arg15,
    };
    return StringVPrint(format, args, 15);
}

//////////////////////////////////////////////////////////////////////////////
// 16 args

int StringPrintTo(std::string* out, const char* format,
                  const FormatPrintArg& arg1,
                  const FormatPrintArg& arg2,
                  const FormatPrintArg& arg3,
                  const FormatPrintArg& arg4,
                  const FormatPrintArg& arg5,
                  const FormatPrintArg& arg6,
                  const FormatPrintArg& arg7,
                  const FormatPrintArg& arg8,
                  const FormatPrintArg& arg9,
                  const FormatPrintArg& arg10,
                  const FormatPrintArg& arg11,
                  const FormatPrintArg& arg12,
                  const FormatPrintArg& arg13,
                  const FormatPrintArg& arg14,
                  const FormatPrintArg& arg15,
                  const FormatPrintArg& arg16)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
        &arg15,
        &arg16,
    };
    return StringVPrintTo(out, format, args, 16);
}

int StringPrintAppend(std::string* out, const char* format,
                      const FormatPrintArg& arg1,
                      const FormatPrintArg& arg2,
                      const FormatPrintArg& arg3,
                      const FormatPrintArg& arg4,
                      const FormatPrintArg& arg5,
                      const FormatPrintArg& arg6,
                      const FormatPrintArg& arg7,
                      const FormatPrintArg& arg8,
                      const FormatPrintArg& arg9,
                      const FormatPrintArg& arg10,
                      const FormatPrintArg& arg11,
                      const FormatPrintArg& arg12,
                      const FormatPrintArg& arg13,
                      const FormatPrintArg& arg14,
                      const FormatPrintArg& arg15,
                      const FormatPrintArg& arg16)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
        &arg15,
        &arg16,
    };
    return StringVPrintAppend(out, format, args, 16);
}

std::string StringPrint(const char* format,
                        const FormatPrintArg& arg1,
                        const FormatPrintArg& arg2,
                        const FormatPrintArg& arg3,
                        const FormatPrintArg& arg4,
                        const FormatPrintArg& arg5,
                        const FormatPrintArg& arg6,
                        const FormatPrintArg& arg7,
                        const FormatPrintArg& arg8,
                        const FormatPrintArg& arg9,
                        const FormatPrintArg& arg10,
                        const FormatPrintArg& arg11,
                        const FormatPrintArg& arg12,
                        const FormatPrintArg& arg13,
                        const FormatPrintArg& arg14,
                        const FormatPrintArg& arg15,
                        const FormatPrintArg& arg16)
{
    const FormatPrintArg* args[] = {
        &arg1,
        &arg2,
        &arg3,
        &arg4,
        &arg5,
        &arg6,
        &arg7,
        &arg8,
        &arg9,
        &arg10,
        &arg11,
        &arg12,
        &arg13,
        &arg14,
        &arg15,
        &arg16,
    };
    return StringVPrint(format, args, 16);
}

} // namespace toft

