// This file was GENERATED by command:
//     pump.py concat.h.pump
// DO NOT EDIT BY HAND!!!

// Copyright (c) 2011, The Toft Authors.
// All rights reserved.
//
// Author: CHEN Feng <chen3feng@gmail.com>
// Created: 04/30/11
// Description: string concat

#ifndef TOFT_BASE_STRING_CONCAT_H
#define TOFT_BASE_STRING_CONCAT_H
#pragma once

#include <string>

#include "toft/base/string/append_1.h"

namespace toft {

////////////////////////////////////////////////////////////////
// Append to output param str

template <
    typename T1,
    typename T2
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
}

template <
    typename T1,
    typename T2,
    typename T3
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
    StringAppend(str, a25);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
    StringAppend(str, a25);
    StringAppend(str, a26);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
    StringAppend(str, a25);
    StringAppend(str, a26);
    StringAppend(str, a27);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
    StringAppend(str, a25);
    StringAppend(str, a26);
    StringAppend(str, a27);
    StringAppend(str, a28);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
    StringAppend(str, a25);
    StringAppend(str, a26);
    StringAppend(str, a27);
    StringAppend(str, a28);
    StringAppend(str, a29);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
    StringAppend(str, a25);
    StringAppend(str, a26);
    StringAppend(str, a27);
    StringAppend(str, a28);
    StringAppend(str, a29);
    StringAppend(str, a30);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30,
    typename T31
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30,
    const T31& a31
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
    StringAppend(str, a25);
    StringAppend(str, a26);
    StringAppend(str, a27);
    StringAppend(str, a28);
    StringAppend(str, a29);
    StringAppend(str, a30);
    StringAppend(str, a31);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30,
    typename T31,
    typename T32
>
void StringAppend(
    std::string* str,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30,
    const T31& a31,
    const T32& a32
)
{
    StringAppend(str, a1);
    StringAppend(str, a2);
    StringAppend(str, a3);
    StringAppend(str, a4);
    StringAppend(str, a5);
    StringAppend(str, a6);
    StringAppend(str, a7);
    StringAppend(str, a8);
    StringAppend(str, a9);
    StringAppend(str, a10);
    StringAppend(str, a11);
    StringAppend(str, a12);
    StringAppend(str, a13);
    StringAppend(str, a14);
    StringAppend(str, a15);
    StringAppend(str, a16);
    StringAppend(str, a17);
    StringAppend(str, a18);
    StringAppend(str, a19);
    StringAppend(str, a20);
    StringAppend(str, a21);
    StringAppend(str, a22);
    StringAppend(str, a23);
    StringAppend(str, a24);
    StringAppend(str, a25);
    StringAppend(str, a26);
    StringAppend(str, a27);
    StringAppend(str, a28);
    StringAppend(str, a29);
    StringAppend(str, a30);
    StringAppend(str, a31);
    StringAppend(str, a32);
}

/////////////////////////////////////////////////////////////////////////////
// Concat and return result

template <
    typename T1
>
std::string StringConcat(
    const T1& a1
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1);
    return result;
}

template <
    typename T1,
    typename T2
>
std::string StringConcat(
    const T1& a1,
    const T2& a2
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24)+ internal::GuessStringSize(a25);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24)+ internal::GuessStringSize(a25)+
        internal::GuessStringSize(a26);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24)+ internal::GuessStringSize(a25)+
        internal::GuessStringSize(a26)+ internal::GuessStringSize(a27);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24)+ internal::GuessStringSize(a25)+
        internal::GuessStringSize(a26)+ internal::GuessStringSize(a27)+
        internal::GuessStringSize(a28);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24)+ internal::GuessStringSize(a25)+
        internal::GuessStringSize(a26)+ internal::GuessStringSize(a27)+
        internal::GuessStringSize(a28)+ internal::GuessStringSize(a29);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28, a29);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24)+ internal::GuessStringSize(a25)+
        internal::GuessStringSize(a26)+ internal::GuessStringSize(a27)+
        internal::GuessStringSize(a28)+ internal::GuessStringSize(a29)+
        internal::GuessStringSize(a30);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28, a29, a30);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30,
    typename T31
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30,
    const T31& a31
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24)+ internal::GuessStringSize(a25)+
        internal::GuessStringSize(a26)+ internal::GuessStringSize(a27)+
        internal::GuessStringSize(a28)+ internal::GuessStringSize(a29)+
        internal::GuessStringSize(a30)+ internal::GuessStringSize(a31);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28, a29, a30, a31);
    return result;
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30,
    typename T31,
    typename T32
>
std::string StringConcat(
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30,
    const T31& a31,
    const T32& a32
)
{
    std::string result;
    size_t guess_size = internal::GuessStringSize(a1)+
        internal::GuessStringSize(a2)+ internal::GuessStringSize(a3)+
        internal::GuessStringSize(a4)+ internal::GuessStringSize(a5)+
        internal::GuessStringSize(a6)+ internal::GuessStringSize(a7)+
        internal::GuessStringSize(a8)+ internal::GuessStringSize(a9)+
        internal::GuessStringSize(a10)+ internal::GuessStringSize(a11)+
        internal::GuessStringSize(a12)+ internal::GuessStringSize(a13)+
        internal::GuessStringSize(a14)+ internal::GuessStringSize(a15)+
        internal::GuessStringSize(a16)+ internal::GuessStringSize(a17)+
        internal::GuessStringSize(a18)+ internal::GuessStringSize(a19)+
        internal::GuessStringSize(a20)+ internal::GuessStringSize(a21)+
        internal::GuessStringSize(a22)+ internal::GuessStringSize(a23)+
        internal::GuessStringSize(a24)+ internal::GuessStringSize(a25)+
        internal::GuessStringSize(a26)+ internal::GuessStringSize(a27)+
        internal::GuessStringSize(a28)+ internal::GuessStringSize(a29)+
        internal::GuessStringSize(a30)+ internal::GuessStringSize(a31)+
        internal::GuessStringSize(a32);

    result.reserve(guess_size);
    (void) guess_size;

    StringAppend(&result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28, a29, a30, a31, a32);
    return result;
}

/////////////////////////////////////////////////////////////////////////////
// Concat to output param

template <
    typename T1
>
void StringConcatTo(
    std::string* result,
    const T1& a1
)
{
    result->clear();
    StringAppend(result, a1);
}

template <
    typename T1,
    typename T2
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2
)
{
    result->clear();
    StringAppend(result, a1, a2);
}

template <
    typename T1,
    typename T2,
    typename T3
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3
)
{
    result->clear();
    StringAppend(result, a1, a2, a3);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28, a29);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28, a29, a30);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30,
    typename T31
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30,
    const T31& a31
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28, a29, a30, a31);
}

template <
    typename T1,
    typename T2,
    typename T3,
    typename T4,
    typename T5,
    typename T6,
    typename T7,
    typename T8,
    typename T9,
    typename T10,
    typename T11,
    typename T12,
    typename T13,
    typename T14,
    typename T15,
    typename T16,
    typename T17,
    typename T18,
    typename T19,
    typename T20,
    typename T21,
    typename T22,
    typename T23,
    typename T24,
    typename T25,
    typename T26,
    typename T27,
    typename T28,
    typename T29,
    typename T30,
    typename T31,
    typename T32
>
void StringConcatTo(
    std::string* result,
    const T1& a1,
    const T2& a2,
    const T3& a3,
    const T4& a4,
    const T5& a5,
    const T6& a6,
    const T7& a7,
    const T8& a8,
    const T9& a9,
    const T10& a10,
    const T11& a11,
    const T12& a12,
    const T13& a13,
    const T14& a14,
    const T15& a15,
    const T16& a16,
    const T17& a17,
    const T18& a18,
    const T19& a19,
    const T20& a20,
    const T21& a21,
    const T22& a22,
    const T23& a23,
    const T24& a24,
    const T25& a25,
    const T26& a26,
    const T27& a27,
    const T28& a28,
    const T29& a29,
    const T30& a30,
    const T31& a31,
    const T32& a32
)
{
    result->clear();
    StringAppend(result, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
        a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26,
        a27, a28, a29, a30, a31, a32);
}

} // namespace toft

#endif // TOFT_BASE_STRING_CONCAT_H
